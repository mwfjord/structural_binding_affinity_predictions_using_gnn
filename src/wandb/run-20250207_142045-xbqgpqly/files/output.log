/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html
  from .autonotebook import tqdm as notebook_tqdm
/home/marcus/programming/structural_binding_affinity_predictions_using_gnn/src/proteinDNADataset.py:138: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  data = torch.load(os.path.join(self.processed_dir,
Training sample: Data(x=[1779, 1], edge_index=[2, 43874], y=437.005199498878, pos=[1779, 3])
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch_geometric/data/dataset.py:169: UserWarning: Found floating-point labels while calling `dataset.num_classes`. Returning the number of unique elements. Please make sure that this is expected before proceeding.
  warnings.warn("Found floating-point labels while calling "
[34m[1mwandb[0m: Adding directory to artifact (./../data)... Done. 1.4s
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/nn/modules/loss.py:608: UserWarning: Using a target size (torch.Size([16])) that is different to the input size (torch.Size([16, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/nn/modules/loss.py:608: UserWarning: Using a target size (torch.Size([1])) that is different to the input size (torch.Size([1, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/nn/modules/loss.py:608: UserWarning: Using a target size (torch.Size([6])) that is different to the input size (torch.Size([6, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Epoch 1: Train Loss = 741156773.3333, Val Loss = 728393706.6667
Epoch 10: Train Loss = 414010432.8889, Val Loss = 491693461.3333
Epoch 20: Train Loss = 435650432.0000, Val Loss = 494697205.3333
Epoch 30: Train Loss = 415187584.4444, Val Loss = 499615274.6667
Epoch 40: Train Loss = 424647176.8889, Val Loss = 491841738.6667
Epoch 50: Train Loss = 440510519.1111, Val Loss = 494793909.3333
Epoch 60: Train Loss = 404442970.2222, Val Loss = 495201685.3333
Epoch 70: Train Loss = 412694276.0000, Val Loss = 492723776.0000
Epoch 80: Train Loss = 408695072.0000, Val Loss = 491533141.3333
Epoch 90: Train Loss = 406391332.4444, Val Loss = 491809525.3333
Epoch 100: Train Loss = 418562035.1111, Val Loss = 492731786.6667
{'wandb': {'project': 'structural_binding_affinity_predictions_using_gnn', 'entity': 'mwfjord', 'config': {'model': {'type': 'GNN', 'layers': 3, 'hidden_units': 128, 'activation': 'relu'}, 'training': {'epochs': 100, 'batch_size': 32, 'learning_rate': 0.001, 'optimizer': 'adam'}, 'dataset': {'name': 'binding_affinity_dataset', 'split_ratio': {'train': 0.8, 'validation': 0.1, 'test': 0.1}}, 'logging': {'log_interval': 10, 'save_model': True, 'save_interval': 10}}}}
/home/marcus/programming/structural_binding_affinity_predictions_using_gnn/src/proteinDNADataset.py:138: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  data = torch.load(os.path.join(self.processed_dir,
Training sample: Data(x=[1779, 1], edge_index=[2, 43874], y=437.005199498878, pos=[1779, 3])
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch_geometric/data/dataset.py:169: UserWarning: Found floating-point labels while calling `dataset.num_classes`. Returning the number of unique elements. Please make sure that this is expected before proceeding.
  warnings.warn("Found floating-point labels while calling "
[34m[1mwandb[0m: Adding directory to artifact (./../data)...
