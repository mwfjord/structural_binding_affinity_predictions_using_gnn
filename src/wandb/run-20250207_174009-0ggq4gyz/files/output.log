Using device: cuda
/home/marcus/programming/structural_binding_affinity_predictions_using_gnn/src/proteinDNADataset.py:138: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  data = torch.load(os.path.join(self.processed_dir,
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch_geometric/data/dataset.py:169: UserWarning: Found floating-point labels while calling `dataset.num_classes`. Returning the number of unique elements. Please make sure that this is expected before proceeding.
  warnings.warn("Found floating-point labels while calling "
[34m[1mwandb[0m: Adding directory to artifact (./../data)... Done. 1.4s
/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:60: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn(
Training:   0%|                                                                                                                                                           | 0/9 [00:00<?, ?it/s]/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/nn/modules/loss.py:538: UserWarning: Using a target size (torch.Size([32])) that is different to the input size (torch.Size([32, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Training:  89%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‹                | 8/9 [00:01<00:00,  7.37it/s]/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/nn/modules/loss.py:538: UserWarning: Using a target size (torch.Size([17])) that is different to the input size (torch.Size([17, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Validation:   0%|                                                                                                                                                         | 0/2 [00:00<?, ?it/s]/home/marcus/programming/gnn-protein-dna/lib/python3.10/site-packages/torch/nn/modules/loss.py:538: UserWarning: Using a target size (torch.Size([6])) that is different to the input size (torch.Size([6, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
                                                                                                                                                                                                
Epoch 1: Train Loss = 670768661.3333, Val Loss = 651129632.0000
Epoch 2: Train Loss = 640110208.0000, Val Loss = 634993952.0000
Epoch 3: Train Loss = 609492586.6667, Val Loss = 603842864.0000
Epoch 4: Train Loss = 569381137.7778, Val Loss = 552361344.0000
Epoch 5: Train Loss = 495462856.8889, Val Loss = 487421328.0000
Epoch 6: Train Loss = 446287207.1111, Val Loss = 451168912.0000
Epoch 7: Train Loss = 425620195.5556, Val Loss = 453471952.0000
Epoch 8: Train Loss = 437852437.3333, Val Loss = 450674336.0000
Epoch 9: Train Loss = 428989909.3333, Val Loss = 450918992.0000
Epoch 10: Train Loss = 424323189.3333, Val Loss = 451057392.0000
Epoch 11: Train Loss = 424269365.3333, Val Loss = 450722128.0000
Epoch 12: Train Loss = 434378129.7778, Val Loss = 450595248.0000
Epoch 13: Train Loss = 417063509.3333, Val Loss = 450645312.0000
Epoch 14: Train Loss = 422175185.7778, Val Loss = 450616384.0000
Epoch 15: Train Loss = 429701187.5556, Val Loss = 450758800.0000
Epoch 16: Train Loss = 418570481.7778, Val Loss = 450592320.0000
Epoch 17: Train Loss = 437326275.5556, Val Loss = 450603632.0000
Epoch 18: Train Loss = 440766510.2222, Val Loss = 450703104.0000
Epoch 19: Train Loss = 424327651.5556, Val Loss = 450682464.0000
Epoch 20: Train Loss = 427164572.4444, Val Loss = 450586992.0000
Epoch 21: Train Loss = 435000536.8889, Val Loss = 450565776.0000
Epoch 22: Train Loss = 419794769.7778, Val Loss = 450644992.0000
Epoch 23: Train Loss = 434435505.7778, Val Loss = 450576896.0000
Epoch 24: Train Loss = 425956302.2222, Val Loss = 450618944.0000
Epoch 25: Train Loss = 423331434.6667, Val Loss = 450602320.0000
Epoch 26: Train Loss = 425669845.3333, Val Loss = 450632160.0000
Epoch 27: Train Loss = 425349486.2222, Val Loss = 450658128.0000
Epoch 28: Train Loss = 427864099.5556, Val Loss = 450674896.0000
Epoch 29: Train Loss = 425982577.7778, Val Loss = 450647024.0000
Epoch 30: Train Loss = 424034080.0000, Val Loss = 450561488.0000
Epoch 31: Train Loss = 425834734.2222, Val Loss = 450556560.0000
Epoch 32: Train Loss = 417710193.7778, Val Loss = 450561520.0000
Epoch 33: Train Loss = 421279128.8889, Val Loss = 450556368.0000
Epoch 34: Train Loss = 428212558.2222, Val Loss = 450555520.0000
Epoch 35: Train Loss = 424583598.2222, Val Loss = 450555968.0000
Epoch 36: Train Loss = 428727669.3333, Val Loss = 450555040.0000
Epoch 37: Train Loss = 418250300.4444, Val Loss = 450555280.0000
Epoch 38: Train Loss = 417586700.4444, Val Loss = 450555392.0000
Epoch 39: Train Loss = 433551925.3333, Val Loss = 450554224.0000
Epoch 40: Train Loss = 430569559.1111, Val Loss = 450554800.0000
Epoch 41: Train Loss = 428147964.4444, Val Loss = 450566704.0000
Epoch 42: Train Loss = 432246858.6667, Val Loss = 450561872.0000
Epoch 43: Train Loss = 429345831.1111, Val Loss = 450564912.0000
Epoch 44: Train Loss = 433221809.7778, Val Loss = 450565152.0000
Epoch 45: Train Loss = 425008519.1111, Val Loss = 450566784.0000
Epoch 46: Train Loss = 432309799.1111, Val Loss = 450565056.0000
Epoch 47: Train Loss = 417225994.6667, Val Loss = 450569200.0000
Epoch 48: Train Loss = 410587944.8889, Val Loss = 450570784.0000
Epoch 49: Train Loss = 410158924.4444, Val Loss = 450569696.0000
Early stopping triggered.
